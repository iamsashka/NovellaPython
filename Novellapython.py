# Импортируем модуль для генерации случайных чисел
import random

# Список для хранения состояния игры
game_state = {
    "здоровье": 100,
    "золото": 0,
}


# Начало игры
print("Добро пожаловать в текстовую игру новеллу!")
print("Вы просыпаетесь в таинственном лесу. Ваша цель - выбраться отсюда живым. Для этого вам нужно набрать минимум 100 монет и 100 здоровья. Желаем вам удачи!")

# Основная функция игры
def main_game():
    while game_state["здоровье"] > 0:
        print("\nВыберите действие:")
        print("1. Идти вперед")
        print("2. Посмотреть вокруг")
        print("3. Пойти назад")
        print("4. Проверить инвентарь")
        choice = input("Введите номер действия: ")

        if choice == "1":
            go_forward()
        elif choice == "2":
            look_around()
        elif choice == "3":
            gold_challenge()
        elif choice == "4":
            check_inventory()
        else:
            print("Пожалуйста, введите корректный номер действия.")
        if game_state["золото"] >= 100 and game_state["здоровье"] >= 100:
            print("Поздравляем, вы прошли игру и остались живы!!!")
    game_state["здоровье"] = 0  # Устанавливаем здоровье в 0, чтобы завершить игру
    return
 
def gold_challenge():
    print("Вы нашли сундук с золотом!")
    found_gold = random.randint(10, 50)  # Генерируем случайное количество золота от 10 до 50
    print(f"Вы нашли {found_gold} золотых монет.")
    game_state["золото"] += found_gold

def go_forward():
    print("Вы идете вперед и видите разветвление дороги.")
    print("1. Пойти налево")
    print("2. Пойти направо")
    choice = input("Куда вы пойдете? ")

    if choice == "1":
        print("Вы замечаете движение в кустах...")
        print("1. Пойти проверить")
        print("2. Проигнорировать")
        choice = input("Что вы сделаете? ")

        if choice == "1":
            print("Вы обнаружили дружелюбного лесного животного.")
            print("Животное ушло, но оставило вам пирожок. Поздравляем, вы получили +10 к здоровью!")
            game_state["здоровье"] += 10
        elif choice == "2":
            continue_journey()
            print("Вы решили проигнорировать движение в кустах и продолжили свой путь.")

    elif choice == "2":
        print("Вы встретили монстра!")
        if fight_monster():
            print("Вы победили монстра, но потеряли здоровье.")
            game_state["здоровье"] -= 30
        else:
            print("Монстр атакует вас!")
            if defend_against_monster():
                print("Вы увернулись от атаки монстра.")
            else:
                print("Монстр нанес вам урон.")
                game_state["здоровье"] -= 20
    else:
        print("Пожалуйста, введите корректный номер действия.")
        
def continue_journey():
    print("Вы решили пойти дальше и заметили цветы необычайной красоты.")
    print("1. Сорвать цветы")
    print("2. Полить цветы")
    choice = input("Что вы выберете? ")

    if choice == "1":
        print("Вы решили сорвать цветы, но они оказались ядовитыми.")
        print("Вы умерли. Конец игры.")
        game_state["здоровье"] = 0  # Устанавливаем здоровье в 0, чтобы завершить игру
    elif choice == "2":
        found_coins = random.randint(1, 20)  # Генерируем случайное количество монет от 1 до 20
        print(f"Вы полили цветы и нашли {found_coins} золотых монет.")
        game_state["золото"] += found_coins
    else:
        print("Пожалуйста, введите корректный номер действия.")

def look_around():
    print("Вы оглядываетесь вокруг и видите ручей с чистой водой.")
    print("1. Попить воды")
    print("2. Продолжить идти")
    choice = input("Что вы сделаете? ")

    if choice == "1":
        print("Вы восстановили здоровье.")
        game_state["здоровье"] += 20
    elif choice == "2":
        print("Вы продолжаете свой путь.")
    else:
        print("Пожалуйста, введите корректный номер действия.")

def check_inventory():
    print(f"У вас {game_state['золото']} золота и {game_state['здоровье']} здоровья.")

def fight_monster():
    print("Битва с монстром началась!")
    # Генерируем случайное число для определения исхода битвы
    is_victorious = random.choice([True, False])
    return is_victorious

def defend_against_monster():
    print("Попробуйте увернуться от атаки монстра!")
    # Генерируем случайное число для определения успешности уворота
    evaded = random.choice([True, False])
    return evaded

# Запускаем игру
main_game()

# Завершение игры
print("Игра завершена.")
